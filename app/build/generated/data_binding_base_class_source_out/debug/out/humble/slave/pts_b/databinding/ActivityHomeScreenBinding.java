// Generated by view binder compiler. Do not edit!
package humble.slave.pts_b.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import humble.slave.pts_b.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeScreenBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout invisibleActionBar;

  @NonNull
  public final RelativeLayout previousItems;

  @NonNull
  public final RelativeLayout receiverContacts;

  @NonNull
  public final RelativeLayout settings;

  @NonNull
  public final SwitchCompat startStop;

  @NonNull
  public final RelativeLayout todoRemainder;

  @NonNull
  public final RelativeLayout traffic;

  @NonNull
  public final RelativeLayout weather;

  private ActivityHomeScreenBinding(@NonNull LinearLayout rootView,
      @NonNull RelativeLayout invisibleActionBar, @NonNull RelativeLayout previousItems,
      @NonNull RelativeLayout receiverContacts, @NonNull RelativeLayout settings,
      @NonNull SwitchCompat startStop, @NonNull RelativeLayout todoRemainder,
      @NonNull RelativeLayout traffic, @NonNull RelativeLayout weather) {
    this.rootView = rootView;
    this.invisibleActionBar = invisibleActionBar;
    this.previousItems = previousItems;
    this.receiverContacts = receiverContacts;
    this.settings = settings;
    this.startStop = startStop;
    this.todoRemainder = todoRemainder;
    this.traffic = traffic;
    this.weather = weather;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.invisibleActionBar;
      RelativeLayout invisibleActionBar = ViewBindings.findChildViewById(rootView, id);
      if (invisibleActionBar == null) {
        break missingId;
      }

      id = R.id.previousItems;
      RelativeLayout previousItems = ViewBindings.findChildViewById(rootView, id);
      if (previousItems == null) {
        break missingId;
      }

      id = R.id.receiverContacts;
      RelativeLayout receiverContacts = ViewBindings.findChildViewById(rootView, id);
      if (receiverContacts == null) {
        break missingId;
      }

      id = R.id.settings;
      RelativeLayout settings = ViewBindings.findChildViewById(rootView, id);
      if (settings == null) {
        break missingId;
      }

      id = R.id.startStop;
      SwitchCompat startStop = ViewBindings.findChildViewById(rootView, id);
      if (startStop == null) {
        break missingId;
      }

      id = R.id.todoRemainder;
      RelativeLayout todoRemainder = ViewBindings.findChildViewById(rootView, id);
      if (todoRemainder == null) {
        break missingId;
      }

      id = R.id.traffic;
      RelativeLayout traffic = ViewBindings.findChildViewById(rootView, id);
      if (traffic == null) {
        break missingId;
      }

      id = R.id.weather;
      RelativeLayout weather = ViewBindings.findChildViewById(rootView, id);
      if (weather == null) {
        break missingId;
      }

      return new ActivityHomeScreenBinding((LinearLayout) rootView, invisibleActionBar,
          previousItems, receiverContacts, settings, startStop, todoRemainder, traffic, weather);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
